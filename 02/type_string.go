// Code generated by "stringer -type=Type,Class"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[A-1]
	_ = x[NS-2]
	_ = x[MD-3]
	_ = x[MF-4]
	_ = x[CNAME-5]
	_ = x[SOA-6]
	_ = x[MB-7]
	_ = x[MG-8]
	_ = x[MR-9]
	_ = x[NULL-10]
	_ = x[WKS-11]
	_ = x[PTR-12]
	_ = x[HINFO-13]
	_ = x[MINFO-14]
	_ = x[MX-15]
	_ = x[TXT-16]
}

const _Type_name = "ANSMDMFCNAMESOAMBMGMRNULLWKSPTRHINFOMINFOMXTXT"

var _Type_index = [...]uint8{0, 1, 3, 5, 7, 12, 15, 17, 19, 21, 25, 28, 31, 36, 41, 43, 46}

func (i Type) String() string {
	i -= 1
	if i < 0 || i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IN-1]
	_ = x[CS-2]
	_ = x[CH-3]
	_ = x[HS-4]
}

const _Class_name = "INCSCHHS"

var _Class_index = [...]uint8{0, 2, 4, 6, 8}

func (i Class) String() string {
	i -= 1
	if i < 0 || i >= Class(len(_Class_index)-1) {
		return "Class(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Class_name[_Class_index[i]:_Class_index[i+1]]
}
